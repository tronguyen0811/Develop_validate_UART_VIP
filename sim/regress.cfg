##################################################################################################
#This file created by Huy Nguyen
#Updated date: 6/30/2024
##################################################################################################

# Compilation option for all testcase (Not supported yet)
cmp_opts =

# Coverage option: on | off (Not supported yet)
cov = on

# Dump wave option: on | off (Not supported yet)
wave = on

# To check pass condition in log file, format as string 
pass_key_word = "TEST PASSED"

# To check fail condition in log file, format as string 
fail_key_word = "TEST FAILED"

# Set verbosity option for UVM testbench (Not supported yet)
pl = UVM_LOW

tc_list {

  //-----------------HALF_DUPLEX_LHS_RHS_TEST------------------//

  //DATA_BITS_TEST
  half_lhs_rhs_5_data_bits        , run_times=1 , run_opts= ;
  half_lhs_rhs_6_data_bits        , run_times=1 , run_opts= ;
  half_lhs_rhs_7_data_bits        , run_times=1 , run_opts= ;
  half_lhs_rhs_8_data_bits        , run_times=1 , run_opts= ;
  half_lhs_rhs_9_data_bits        , run_times=1 , run_opts= ;

  //BAUDRATE_TEST
  half_lhs_rhs_4800               , run_times=1 , run_opts= ;
  half_lhs_rhs_9600               , run_times=1 , run_opts= ;
  half_lhs_rhs_19200              , run_times=1 , run_opts= ;
  half_lhs_rhs_57600              , run_times=1 , run_opts= ;
  half_lhs_rhs_115200             , run_times=1 , run_opts= ;
  half_lhs_rhs_custom_baudrate    , run_times=1 , run_opts= ;

  //PARITY_TEST
  half_lhs_rhs_no                 , run_times=1 , run_opts= ;
  half_lhs_rhs_even               , run_times=1 , run_opts= ;
  half_lhs_rhs_odd                , run_times=1 , run_opts= ;

  //STOP_BITS_TEST
  half_lhs_rhs_1_stop_bits        , run_times=1 , run_opts= ;
  half_lhs_rhs_2_stop_bits        , run_times=1 , run_opts= ;
  
  //-----------------HALF_DUPLEX_RHS_LHS_TEST------------------//

  //DATA_BITS_TEST
  half_rhs_lhs_5_data_bits        , run_times=1 , run_opts= ;
  half_rhs_lhs_6_data_bits        , run_times=1 , run_opts= ;
  half_rhs_lhs_7_data_bits        , run_times=1 , run_opts= ;
  half_rhs_lhs_8_data_bits        , run_times=1 , run_opts= ;
  half_rhs_lhs_9_data_bits        , run_times=1 , run_opts= ;

  //BAUDRATE_TEST
  half_rhs_lhs_4800               , run_times=1 , run_opts= ;
  half_rhs_lhs_9600               , run_times=1 , run_opts= ;
  half_rhs_lhs_19200              , run_times=1 , run_opts= ;
  half_rhs_lhs_57600              , run_times=1 , run_opts= ;
  half_rhs_lhs_115200             , run_times=1 , run_opts= ;
  half_rhs_lhs_custom_baudrate    , run_times=1 , run_opts= ;

  //PARITY_TEST
  half_rhs_lhs_no                 , run_times=1 , run_opts= ;
  half_rhs_lhs_even               , run_times=1 , run_opts= ;
  half_rhs_lhs_odd                , run_times=1 , run_opts= ;

  //STOP_BITS_TEST
  half_rhs_lhs_1_stop_bits        , run_times=1 , run_opts= ;
  half_rhs_lhs_2_stop_bits        , run_times=1 , run_opts= ;
  
  //---------------------FULL_DUPLEX_TEST----------------------//

  //DATA_BITS_TEST
  full_5_data_bits                , run_times=1 , run_opts= ;
  full_6_data_bits                , run_times=1 , run_opts= ;
  full_7_data_bits                , run_times=1 , run_opts= ;
  full_8_data_bits                , run_times=1 , run_opts= ;
  full_9_data_bits                , run_times=1 , run_opts= ;

  //BAUDRATE_TEST
  full_4800                       , run_times=1 , run_opts= ;
  full_9600                       , run_times=1 , run_opts= ;
  full_19200                      , run_times=1 , run_opts= ;
  full_57600                      , run_times=1 , run_opts= ;
  full_115200                     , run_times=1 , run_opts= ;
  full_custom_baudrate            , run_times=1 , run_opts= ;

  //PARITY_TEST
  full_no                         , run_times=1 , run_opts= ;
  full_even                       , run_times=1 , run_opts= ;
  full_odd                        , run_times=1 , run_opts= ;

  //STOP_BITS_TEST
  full_1_stop_bits                , run_times=1 , run_opts= ;
  full_2_stop_bits                , run_times=1 , run_opts= ;

//---------------------INJECT_ERROR_TEST----------------------//

  data_bits_mismatch              , run_times=1 , run_opts= ;
  baudrate_mismatch               , run_times=1 , run_opts= ;
  parity_mismatch                 , run_times=1 , run_opts= ;
  stop_bits_mismatch              , run_times=1 , run_opts= ;

}
